# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: dev-deploy-actions
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Setup Python for AWS CLI
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install AWS CLI
        run: pip3 install awscli --upgrade --user
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: true
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      - name: Setting .env
        run: |
          echo "REACT_APP_GOOGLE_ANALYTICS_TRACKING_ID=${{secrets.REACT_APP_GOOGLE_ANALYTICS_TRACKING_ID}}" >> .env
          echo "REACT_APP_API=${{secrets.REACT_APP_API}}" >> .env
          cat .env
      - name: Build
        run: npm run build
        env:
          CI: ''
      - name: Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        run: |
          aws s3 sync ./build s3://gijol-prod
      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{secrets.DEV_DISTRIBUTION_ID}} --paths "/*"
